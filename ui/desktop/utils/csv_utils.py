import pandas as pd
import tkinter as tk
from tkinter import ttk

def load_csv(file_path, notebook):
    """ M·ªü file CSV v√† hi·ªÉn th·ªã n·ªôi dung trong m·ªôt tab """
    df = pd.read_csv(file_path)

    # T·∫°o m·ªôt frame m·ªõi cho file CSV
    frame = ttk.Frame(notebook)
    notebook.add(frame, text=file_path.split("/")[-1])  # Th√™m tab v·ªõi t√™n file

    # üîπ Canvas ƒë·ªÉ cu·ªôn n·ªôi dung
    canvas = tk.Canvas(frame, bg="white")
    scroll_x = ttk.Scrollbar(frame, orient="horizontal", command=canvas.xview)
    scroll_y = ttk.Scrollbar(frame, orient="vertical", command=canvas.yview)
    canvas.configure(xscrollcommand=scroll_x.set, yscrollcommand=scroll_y.set)

    scroll_x.pack(side="bottom", fill="x")
    scroll_y.pack(side="right", fill="y")
    canvas.pack(side="left", fill="both", expand=True)

    # üîπ Frame ch·ª©a d·ªØ li·ªáu (ƒë·∫∑t trong Canvas)
    inner_frame = tk.Frame(canvas, bg="white")
    canvas.create_window((0, 0), window=inner_frame, anchor="nw")

    # üîπ G√°n s·ª± ki·ªán cu·ªôn chu·ªôt m∆∞·ª£t h∆°n
    canvas.bind("<Configure>", lambda e, canvas=canvas: canvas.config(scrollregion=canvas.bbox("all")))

    # Hi·ªÉn th·ªã ti√™u ƒë·ªÅ c·ªôt
    for col_idx, col_name in enumerate(df.columns):
        label = tk.Label(inner_frame, text=col_name, font=("Arial", 10, "bold"), bg="#D5DBDB", relief="ridge", padx=5, pady=3)
        label.grid(row=0, column=col_idx, sticky="nsew")

    # Hi·ªÉn th·ªã d·ªØ li·ªáu
    for row_idx, row in df.iterrows():
        for col_idx, value in enumerate(row):
            cell = tk.Label(inner_frame, text=value, font=("Arial", 10), bg="white", relief="ridge", padx=5, pady=3)
            cell.grid(row=row_idx + 1, column=col_idx, sticky="nsew")

    # C·∫≠p nh·∫≠t k√≠ch th∆∞·ªõc scroll region
    inner_frame.update_idletasks()
    canvas.config(scrollregion=canvas.bbox("all"))

    # üîπ Th√™m n√∫t ph√≥ng to/thu nh·ªè
    zoom_frame = ttk.Frame(frame)
    zoom_frame.pack(side="top", fill="x")

    zoom_in_button = ttk.Button(zoom_frame, text="Zoom In", command=lambda: zoom_csv(inner_frame, 1.2))
    zoom_in_button.pack(side="left", padx=5, pady=5)

    zoom_out_button = ttk.Button(zoom_frame, text="Zoom Out", command=lambda: zoom_csv(inner_frame, 0.8))
    zoom_out_button.pack(side="left", padx=5, pady=5)

    return df

def zoom_csv(inner_frame, scale_factor):
    """ Ph√≥ng to/thu nh·ªè b·∫£ng CSV """
    for widget in inner_frame.winfo_children():
        current_font = widget.cget("font")
        font_size = int(current_font.split(" ")[1])  # L·∫•y k√≠ch th∆∞·ªõc font hi·ªán t·∫°i
        new_font_size = max(8, int(font_size * scale_factor))  # Gi·ªõi h·∫°n k√≠ch th∆∞·ªõc t·ªëi thi·ªÉu
        widget.config(font=("Arial", new_font_size))